{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["Movie","year","title","summary","poster","genres","className","src","alt","map","genre","index","key","slice","App","state","isLoading","movies","getMovies","a","axios","get","data","setState","this","movie","id","medium_cover_image","React","Component","ReactDOM","render","document","getElementById"],"mappings":"0TAyCeA,MAnCf,YAA0D,IAAzCC,EAAwC,EAAxCA,KAAMC,EAAkC,EAAlCA,MAAOC,EAA2B,EAA3BA,QAASC,EAAkB,EAAlBA,OAAQC,EAAU,EAAVA,OAC3C,OAAS,yBACDC,UAAY,SAChB,yBACIC,IAAQH,EACZI,IAAQN,EACRA,MAAUA,IACP,IANE,IAMG,yBACJI,UAAY,eAChB,wBACGA,UAAY,gBADf,IACkCJ,EADlC,KACiD,IAHzC,IAG8C,wBACnDI,UAAY,eADuC,IACrBL,EADqB,KACP,IAJvC,IAI4C,wBACjDK,UAAY,iBADqC,IACjB,IADiB,IAEhDD,EAAOI,KAAI,SAACC,EAAOC,GAAR,OAAoB,wBACxBC,IAAQD,EACXL,UAAY,iBAFe,IAEK,IAFL,IAEaI,EAFb,IAEuB,IAFvB,QAFiB,IAOhD,IAPgD,KAQ/C,IAZG,IAYE,uBACRJ,UAAY,kBADJ,IACyBH,EAAQU,MAAM,EAAG,KAD1C,QAC0D,IAb5D,KAcF,IApBD,MC6DEC,G,kNA7DXC,MAAQ,CACJC,WAAW,EACXC,OAAQ,I,EAUZC,U,sBAAY,8BAAAC,EAAA,sEAKEC,IAAMC,IACZ,4DANI,gBAGQJ,EAHR,EAEJK,KACIA,KAAQL,OAQhB,EAAKM,SAAS,CAAEN,SAAQD,WAAW,IAX3B,2C,kEAeRQ,KAAKN,c,+BAEC,IAAD,EACyBM,KAAKT,MAA3BC,EADH,EACGA,UAAWC,EADd,EACcA,OACnB,OAAS,6BACGX,UAAY,aADf,IAC+B,IAD/B,IAEDU,EAAc,yBACNV,UAAY,UAChB,0BACKA,UAAY,gBADjB,eACqD,IAH3C,KAKR,yBACEA,UAAY,UADd,IAC2B,IAD3B,IAEEW,EAAOR,KAAI,SAACgB,GAAD,OAEP,kBACA,EADA,CACMb,IAAQa,EAAMC,GACpBA,GAAOD,EAAMC,GACbzB,KAASwB,EAAMxB,KACfC,MAAUuB,EAAMvB,MAChBC,QAAYsB,EAAMtB,QAClBC,OAAWqB,EAAME,mBACjBtB,OAAWoB,EAAMpB,YAXvB,IAcE,IAdF,KAPL,IAwBD,IAxBC,S,GAhCCuB,IAAMC,YCDxBC,IAASC,OAAQ,kBAAE,EAAF,MAAYC,SAASC,eAAe,W","file":"static/js/main.93f95d8c.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport './Movie.css';\n\n//Movie Component는 state가 따로 필요하질 않아서 class로 구현할 필요없다.\n//img 태그에서 alt와 title을 쓰는 이유는 poster에 마우스를 올리면 제목이 뜨게 된다.\nfunction Movie({ year, title, summary, poster, genres }) {\n    return ( <\n        div className = \"movie\" >\n        <\n        img src = { poster }\n        alt = { title }\n        title = { title }\n        />{' '} <\n        div className = \"movie__data\" >\n        <\n        h3 className = \"movie__title\" > { title } < /h3>{' '} <\n        h5 className = \"movie__year\" > { year } < /h5>{' '} <\n        ul className = \"movie__genres\" > { ' ' } {\n            genres.map((genre, index) => ( <\n                li key = { index }\n                className = \"genres__genre\" > { ' ' } { genre } { ' ' } <\n                /li>\n            ))\n        } { ' ' } <\n        /ul>{' '} <\n        p className = \"movie__summary\" > { summary.slice(0, 140) }... < /p>{' '} <\n        /div>{' '} <\n        /div>\n    );\n}\n\nMovie.propTypes = {\n    id: PropTypes.number.isRequired,\n    year: PropTypes.number.isRequired,\n    title: PropTypes.string.isRequired,\n    summary: PropTypes.string.isRequired,\n    poster: PropTypes.string.isRequired,\n    genres: PropTypes.arrayOf(PropTypes.string).isRequired,\n};\n\nexport default Movie;","import React from 'react';\nimport axios from 'axios';\nimport Movie from './Movie';\nimport './App.css';\n\n// setState를 사용하지 않으면 새 state와 함께 render function이 호출되지 않는다.\nclass App extends React.Component {\n    state = {\n        isLoading: true,\n        movies: [],\n    };\n    /*\n    add = () => {\n        this.setState((current) => ({ count: current.count + 1 }));\n    };\n    minus = () => {\n        this.setState({ count: this.state.count - 1 });\n    };\n*/\n    getMovies = async() => {\n        const {\n            data: {\n                data: { movies },\n            },\n        } = await axios.get(\n            'https://yts-proxy.now.sh/list_movies.json?sort_by=rating',\n        ); //--> movies를 console.log로 확인하면 이러한 형태이다. 이렇게 써도 된다.\n        // == const movies = await axios.get('https://yts-proxy.now.sh/list_movies.json?sort_by=rating',)\n        //async, await을 하는 이유는 기본적으로 javascript에게\n        //getMovies함수가 조금 시간이 필요하고 그걸 기다려야 한다는 것을 알려주기 위해서 이다.\n        this.setState({ movies, isLoading: false }); //axios에서 받아온 내용을 state에 넣어준다.\n    };\n\n    componentDidMount() {\n        this.getMovies();\n    }\n    render() {\n        const { isLoading, movies } = this.state;\n        return ( <\n            section className = \"container\" > { ' ' } {\n                isLoading ? ( <\n                    div className = \"loader\" >\n                    <\n                    span className = \"loader__text\" > Loading.. < /span>{' '} <\n                    /div>\n                ) : ( <\n                    div className = \"movies\" > { ' ' } {\n                        movies.map((movie) => (\n                            //실제 Movie를 rendeing 한다.\n                            <\n                            Movie key = { movie.id }\n                            id = { movie.id }\n                            year = { movie.year }\n                            title = { movie.title }\n                            summary = { movie.summary }\n                            poster = { movie.medium_cover_image }\n                            genres = { movie.genres }\n                            />\n                        ))\n                    } { ' ' } <\n                    /div>\n                )\n            } { ' ' } <\n            /section>\n        );\n    }\n}\n\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\n\nReactDOM.render( < App / > , document.getElementById('root'));\n/*\n< App / >은 Component이다.\nComponent는 HTML을 반환하는 함수이다.\nJavascript와 HTML 사이의 이러한 조합을 jsx라고 한다.\n*/"],"sourceRoot":""}